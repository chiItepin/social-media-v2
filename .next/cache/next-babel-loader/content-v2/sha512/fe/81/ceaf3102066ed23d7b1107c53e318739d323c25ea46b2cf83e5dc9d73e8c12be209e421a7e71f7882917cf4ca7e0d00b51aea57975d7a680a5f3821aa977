{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/user/Desktop/shareit/src/pages/posts/[id].tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useRouter } from 'next/router';\n\nvar Page = function Page(_ref) {\n  _s();\n\n  var todos = _ref.todos,\n      apiUrl = _ref.apiUrl;\n  var router = useRouter();\n  var id = router.query.id;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [\"mounted Post view \", id, \"! \", apiUrl]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, _this), todos && todos.map(function (todo) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"title: \", todo.title]\n      }, todo.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, _this);\n    })]\n  }, void 0, true);\n};\n\n_s(Page, \"fN7XvhJ+p5oE6+Xlo0NJmXpxjC8=\", false, function () {\n  return [useRouter];\n});\n\n_c = Page;\nexport var __N_SSP = true;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/user/Desktop/shareit/src/pages/posts/[id].tsx"],"names":["React","useRouter","Page","todos","apiUrl","router","id","query","map","todo","title"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAuD,OAAvD;AAEA,SAASC,SAAT,QAA0B,aAA1B;;AA4BA,IAAMC,IAA+B,GAAG,SAAlCA,IAAkC,OAGlC;AAAA;;AAAA,MAFJC,KAEI,QAFJA,KAEI;AAAA,MADJC,MACI,QADJA,MACI;AACJ,MAAMC,MAAM,GAAGJ,SAAS,EAAxB;AADI,MAEIK,EAFJ,GAEWD,MAAM,CAACE,KAFlB,CAEID,EAFJ;AAIJ,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,uCACqBA,EADrB,QAC2BF,MAD3B;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAKID,KAAK,IAAIA,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD;AAAA,0BACjB;AAAA,8BACUA,IAAI,CAACC,KADf;AAAA,SAAUD,IAAI,CAACH,EAAf;AAAA;AAAA;AAAA;AAAA,eADiB;AAAA,KAAV,CALb;AAAA,kBADF;AAcD,CArBD;;GAAMJ,I;UAIWD,S;;;KAJXC,I;;AAuBN,eAAeA,IAAf","sourcesContent":["import React, { FunctionComponent, ReactElement } from 'react';\nimport { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\n\ninterface ITodos {\n  userId: number;\n  title: string;\n  id: number;\n  completed: boolean;\n}\n\ninterface IProps {\n  todos: ITodos[];\n  apiUrl: string;\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const data = await res.json();\n\n  const apiUrl = process.env.DUMMY_API;\n\n  return {\n    props: {\n      todos: data,\n      apiUrl\n    }\n  }\n}\n\nconst Page: FunctionComponent<IProps> = ({\n  todos,\n  apiUrl\n}) => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  return (\n    <>\n      <div className=\"post\">\n        mounted Post view {id}! {apiUrl}\n      </div>\n      {\n        todos && todos.map((todo) => (\n          <div key={todo.id}>\n            title: {todo.title}\n          </div>\n        ))\n      }\n    </>\n  );\n}\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}