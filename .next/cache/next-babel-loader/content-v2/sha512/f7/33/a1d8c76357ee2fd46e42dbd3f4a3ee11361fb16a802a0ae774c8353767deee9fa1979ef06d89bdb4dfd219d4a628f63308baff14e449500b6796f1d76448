{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from 'react';\n\nvar PostList = function PostList(_ref) {\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts && posts.length && posts.data.map(function (post) {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: \"cool\"\n      }, void 0, false);\n    })\n  }, void 0, false);\n};\n\n_c = PostList;\nexport var __N_SSP = true;\nexport default PostList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"sources":["/Users/user/Desktop/shareit/src/pages/posts/index.tsx"],"names":["React","PostList","posts","length","data","map","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;;AAgDA,IAAMC,QAAmC,GAAG,SAAtCA,QAAsC,OAEtC;AAAA,MADJC,KACI,QADJA,KACI;AACJ,sBACE;AAAA,cAEIA,KAAK,IAAIA,KAAK,CAACC,MAAf,IACED,KAAK,CAACE,IAAN,CAAWC,GAAX,CAAe,UAACC,IAAD;AAAA,0BACb;AAAA;AAAA,uBADa;AAAA,KAAf;AAHN,mBADF;AAWD,CAdD;;KAAML,Q;;AAgBN,eAAeA,QAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { GetServerSideProps } from 'next';\nimport Link from 'next/link';\n\ninterface IPostOwner {\n  email: string;\n  firstName: string;\n  id: number;\n  lastName: string;\n  picture: string;\n  title: string;\n}\n\ninterface IPost {\n  id: number;\n  image: string;\n  likes: number;\n  link: string;\n  owner: IPostOwner;\n  publishDate: string;\n  tags: [];\n  text: string;\n}\n\ninterface IProps {\n  posts: IPost[];\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context: any) => {\n  const apiToken = process.env.DUMMY_API;\n  const apiUrl = process.env.DUMMY_URL;\n\n  const res = await fetch(`${apiUrl}post`, {\n    headers: {\n      'app-id': apiToken\n    }\n  });\n  const posts = await res.json().catch((error) => {\n    return null;\n  });\n\n  return {\n    props: {\n      posts\n    }\n  }\n}\n\nconst PostList: FunctionComponent<IProps> = ({\n  posts,\n}) => {\n  return (\n    <>\n      {\n        posts && posts.length && (\n          posts.data.map((post) => (\n            <>cool</>\n          ))\n        )\n      }\n    </>\n  );\n}\n\nexport default PostList;"]},"metadata":{},"sourceType":"module"}