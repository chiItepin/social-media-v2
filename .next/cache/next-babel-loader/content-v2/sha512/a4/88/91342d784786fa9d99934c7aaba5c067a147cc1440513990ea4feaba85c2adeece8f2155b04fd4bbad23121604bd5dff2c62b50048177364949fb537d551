{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from 'react';\nexport const getServerSideProps = async context => {\n  const apiToken = process.env.DUMMY_API;\n  const apiUrl = process.env.DUMMY_URL;\n  const res = await fetch(`${apiUrl}post`, {\n    headers: {\n      'app-id': apiToken\n    }\n  });\n  const posts = await res.json().catch(error => {\n    return null;\n  });\n  return {\n    props: {\n      posts\n    }\n  };\n};\n\nconst PostList = ({\n  posts\n}) => {\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts && posts.length && posts.data.map(post => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"cool\"\n    }, void 0, false))\n  }, void 0, false);\n};\n\nexport default PostList;","map":{"version":3,"sources":["/Users/user/Desktop/shareit/src/pages/posts/index.tsx"],"names":["React","getServerSideProps","context","apiToken","process","env","DUMMY_API","apiUrl","DUMMY_URL","res","fetch","headers","posts","json","catch","error","props","PostList","length","data","map","post"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;AAoCA,OAAO,MAAMC,kBAAsC,GAAG,MAAOC,OAAP,IAAwB;AAC5E,QAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAR,CAAYC,SAA7B;AACA,QAAMC,MAAM,GAAGH,OAAO,CAACC,GAAR,CAAYG,SAA3B;AAEA,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAE,GAAEH,MAAO,MAAX,EAAkB;AACvCI,IAAAA,OAAO,EAAE;AACP,gBAAUR;AADH;AAD8B,GAAlB,CAAvB;AAKA,QAAMS,KAAK,GAAG,MAAMH,GAAG,CAACI,IAAJ,GAAWC,KAAX,CAAkBC,KAAD,IAAW;AAC9C,WAAO,IAAP;AACD,GAFmB,CAApB;AAIA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLJ,MAAAA;AADK;AADF,GAAP;AAKD,CAlBM;;AAoBP,MAAMK,QAAmC,GAAG,CAAC;AAC3CL,EAAAA;AAD2C,CAAD,KAEtC;AACJ,sBACE;AAAA,cAEIA,KAAK,IAAIA,KAAK,CAACM,MAAf,IACEN,KAAK,CAACO,IAAN,CAAWC,GAAX,CAAgBC,IAAD,iBACb;AAAA;AAAA,qBADF;AAHN,mBADF;AAWD,CAdD;;AAgBA,eAAeJ,QAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { GetServerSideProps } from 'next';\nimport Link from 'next/link';\n\ninterface IPostOwner {\n  email: string;\n  firstName: string;\n  id: number;\n  lastName: string;\n  picture: string;\n  title: string;\n}\n\ninterface IPost {\n  id: number;\n  image: string;\n  likes: number;\n  link: string;\n  owner: IPostOwner;\n  publishDate: string;\n  tags: [];\n  text: string;\n}\n\ninterface IPostData {\n  data: IPost[];\n  limit: number;\n  offset: number;\n  page: number;\n  total: number;\n}\n\ninterface IProps {\n  posts: IPostData;\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context: any) => {\n  const apiToken = process.env.DUMMY_API;\n  const apiUrl = process.env.DUMMY_URL;\n\n  const res = await fetch(`${apiUrl}post`, {\n    headers: {\n      'app-id': apiToken\n    }\n  });\n  const posts = await res.json().catch((error) => {\n    return null;\n  });\n\n  return {\n    props: {\n      posts\n    }\n  }\n}\n\nconst PostList: FunctionComponent<IProps> = ({\n  posts,\n}) => {\n  return (\n    <>\n      {\n        posts && posts.length && (\n          posts.data.map((post) => (\n            <>cool</>\n          ))\n        )\n      }\n    </>\n  );\n}\n\nexport default PostList;"]},"metadata":{},"sourceType":"module"}