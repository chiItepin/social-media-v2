{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/user/Desktop/shareit/src/pages/posts/[id].tsx\";\nimport React from 'react';\nimport { useRouter } from 'next/router';\nexport const getServerSideProps = async context => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const data = await res.json();\n  return {\n    props: {\n      todos: data\n    }\n  };\n};\n\nconst Page = ({\n  todos\n}) => {\n  const router = useRouter();\n  const {\n    id\n  } = router.query;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"post\",\n      children: [\"mounted Post view! \", process.env.DUMMY_API]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), todos && todos.map(todo => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"title: \", todo.title]\n    }, todo.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 11\n    }, this))]\n  }, void 0, true);\n};\n\nexport default Page;","map":{"version":3,"sources":["/Users/user/Desktop/shareit/src/pages/posts/[id].tsx"],"names":["React","useRouter","getServerSideProps","context","res","fetch","data","json","props","todos","Page","router","id","query","process","env","DUMMY_API","map","todo","title"],"mappings":";;;AAAA,OAAOA,KAAP,MAAuD,OAAvD;AAEA,SAASC,SAAT,QAA0B,aAA1B;AAaA,OAAO,MAAMC,kBAAsC,GAAG,MAAOC,OAAP,IAAmB;AACvE,QAAMC,GAAG,GAAG,MAAMC,KAAK,CAAC,4CAAD,CAAvB;AACA,QAAMC,IAAI,GAAG,MAAMF,GAAG,CAACG,IAAJ,EAAnB;AAEA,SAAO;AACLC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAEH;AADF;AADF,GAAP;AAKD,CATM;;AAWP,MAAMI,IAA+B,GAAG,CAAC;AACvCD,EAAAA;AADuC,CAAD,KAElC;AACJ,QAAME,MAAM,GAAGV,SAAS,EAAxB;AACA,QAAM;AAAEW,IAAAA;AAAF,MAASD,MAAM,CAACE,KAAtB;AAEA,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,MAAf;AAAA,wCACsBC,OAAO,CAACC,GAAR,CAAYC,SADlC;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAKIP,KAAK,IAAIA,KAAK,CAACQ,GAAN,CAAWC,IAAD,iBACjB;AAAA,4BACUA,IAAI,CAACC,KADf;AAAA,OAAUD,IAAI,CAACN,EAAf;AAAA;AAAA;AAAA;AAAA,YADO,CALb;AAAA,kBADF;AAcD,CApBD;;AAsBA,eAAeF,IAAf","sourcesContent":["import React, { FunctionComponent, ReactElement } from 'react';\nimport { GetServerSideProps } from 'next';\nimport { useRouter } from 'next/router';\n\ninterface ITodos {\n  userId: number;\n  title: string;\n  id: number;\n  completed: boolean;\n}\n\ninterface IProps {\n  todos: ITodos[];\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context) => {\n  const res = await fetch('https://jsonplaceholder.typicode.com/todos');\n  const data = await res.json();\n\n  return {\n    props: {\n      todos: data,\n    }\n  }\n}\n\nconst Page: FunctionComponent<IProps> = ({\n  todos\n}) => {\n  const router = useRouter();\n  const { id } = router.query;\n\n  return (\n    <>\n      <div className=\"post\">\n        mounted Post view! {process.env.DUMMY_API}\n      </div>\n      {\n        todos && todos.map((todo) => (\n          <div key={todo.id}>\n            title: {todo.title}\n          </div>\n        ))\n      }\n    </>\n  );\n}\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}