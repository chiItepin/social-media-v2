{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport React from 'react';\n\nvar Page = function Page(_ref) {\n  var posts = _ref.posts;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: \"mounted Posts!\"\n  }, void 0, false);\n};\n\n_c = Page;\nexport var __N_SSP = true;\nexport default Page;\n\nvar _c;\n\n$RefreshReg$(_c, \"Page\");","map":{"version":3,"sources":["/Users/user/Desktop/shareit/src/pages/posts/index.tsx"],"names":["React","Page","posts"],"mappings":";;AAAA,OAAOA,KAAP,MAAyC,OAAzC;;AAgDA,IAAMC,IAA+B,GAAG,SAAlCA,IAAkC,OAElC;AAAA,MADJC,KACI,QADJA,KACI;AACJ,sBACE;AAAA;AAAA,mBADF;AAKD,CARD;;KAAMD,I;;AAUN,eAAeA,IAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\nimport { GetServerSideProps } from 'next';\nimport Link from 'next/link';\n\ninterface IPostOwner {\n  email: string;\n  firstName: string;\n  id: number;\n  lastName: string;\n  picture: string;\n  title: string;\n}\n\ninterface IPost {\n  id: number;\n  image: string;\n  likes: number;\n  link: string;\n  owner: IPostOwner;\n  publishDate: string;\n  tags: [];\n  text: string;\n}\n\ninterface IProps {\n  posts: IPost[];\n}\n\nexport const getServerSideProps: GetServerSideProps = async (context: any) => {\n  const apiToken = process.env.DUMMY_API;\n  const apiUrl = process.env.DUMMY_URL;\n\n  const res = await fetch(`${apiUrl}post`, {\n    headers: {\n      'app-id': apiToken\n    }\n  });\n  const posts = await res.json().catch((error) => {\n    return null;\n  });\n\n  return {\n    props: {\n      posts\n    }\n  }\n}\n\nconst Page: FunctionComponent<IProps> = ({\n  posts,\n}) => {\n  return (\n    <>\n      mounted Posts!\n    </>\n  );\n}\n\nexport default Page;"]},"metadata":{},"sourceType":"module"}